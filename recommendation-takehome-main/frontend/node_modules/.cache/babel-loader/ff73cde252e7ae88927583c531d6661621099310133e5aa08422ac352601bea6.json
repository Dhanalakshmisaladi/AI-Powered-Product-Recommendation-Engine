{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swamy\\\\Downloads\\\\recommendation-takehome-main\\\\recommendation-takehome-main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // <-- useEffect is needed\nimport Catalog from './components/Catalog';\nimport UserPreferences from './components/UserPreferences';\nimport BrowsingHistory from './components/BrowsingHistory';\nimport Recommendations from './components/Recommendations';\nimport ProductDetail from './components/ProductDetail'; // <-- Import ProductDetail\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [preferences, setPreferences] = useState({\n    category: '',\n    price_range: ''\n  });\n  const [history, setHistory] = useState([]);\n  const [recommendations, setRecommendations] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // --- MISSING PIECES ---\n  const [productCatalog, setProductCatalog] = useState([]); // NEW: State for all products\n  const [selectedProduct, setSelectedProduct] = useState(null); // NEW: State for the selected product\n\n  // NEW: Fetch all products when the component first loads\n  useEffect(() => {\n    const fetchAllProducts = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5001/api/products');\n        const data = await response.json();\n        setProductCatalog(data); // Store all products in state\n      } catch (error) {\n        console.error(\"Failed to fetch the product catalog:\", error);\n      }\n    };\n    fetchAllProducts();\n  }, []); // The empty array [] means this runs only once\n\n  const handleProductClick = product => {\n    if (!history.find(p => p.id === product.id)) {\n      setHistory([...history, product]);\n    }\n    setSelectedProduct(product); // Show details when a product is clicked\n  };\n  const handleGetRecommendations = async () => {\n    setIsLoading(true);\n    setRecommendations(null);\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          preferences: preferences,\n          history: history.map(({\n            id,\n            name,\n            category\n          }) => ({\n            id,\n            name,\n            category\n          }))\n        })\n      });\n      const data = await response.json();\n      setRecommendations(data);\n    } catch (error) {\n      console.error('Failed to fetch recommendations:', error);\n      setRecommendations({\n        error: 'Failed to connect to the server.'\n      });\n    }\n    setIsLoading(false);\n  };\n\n  // This function will now work because productCatalog and setSelectedProduct exist\n  const handleRecommendationClick = productId => {\n    const product = productCatalog.find(p => p.id === productId);\n    setSelectedProduct(product);\n  };\n  // In App.js, add this new function:\n  const handleDeleteHistoryItem = productIdToDelete => {\n    // Create a new array that excludes the item with the matching ID\n    const updatedHistory = history.filter(item => item.id !== productIdToDelete);\n    setHistory(updatedHistory);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Product Recommender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: [/*#__PURE__*/_jsxDEV(UserPreferences, {\n            preferences: preferences,\n            setPreferences: setPreferences,\n            onSubmit: handleGetRecommendations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrowsingHistory, {\n            history: history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Getting recommendations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Recommendations, {\n            recommendations: recommendations,\n            onProductSelect: handleRecommendationClick,\n            productCatalog: productCatalog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: selectedProduct ? /*#__PURE__*/_jsxDEV(ProductDetail, {\n            product: selectedProduct,\n            onClose: () => setSelectedProduct(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Catalog, {\n            products: productCatalog,\n            onProductClick: handleProductClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"22MeEWZsWp1pcWdpeon1/peZWO4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Catalog","UserPreferences","BrowsingHistory","Recommendations","ProductDetail","jsxDEV","_jsxDEV","App","_s","preferences","setPreferences","category","price_range","history","setHistory","recommendations","setRecommendations","isLoading","setIsLoading","productCatalog","setProductCatalog","selectedProduct","setSelectedProduct","fetchAllProducts","response","fetch","data","json","error","console","handleProductClick","product","find","p","id","handleGetRecommendations","method","headers","body","JSON","stringify","map","name","handleRecommendationClick","productId","handleDeleteHistoryItem","productIdToDelete","updatedHistory","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onProductSelect","onClose","products","onProductClick","_c","$RefreshReg$"],"sources":["C:/Users/swamy/Downloads/recommendation-takehome-main/recommendation-takehome-main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // <-- useEffect is needed\nimport Catalog from './components/Catalog';\nimport UserPreferences from './components/UserPreferences'; \nimport BrowsingHistory from './components/BrowsingHistory';\nimport Recommendations from './components/Recommendations';\nimport ProductDetail from './components/ProductDetail'; // <-- Import ProductDetail\nimport './styles/App.css';\n\nfunction App() {\n  const [preferences, setPreferences] = useState({ category: '', price_range: '' });\n  const [history, setHistory] = useState([]);\n  const [recommendations, setRecommendations] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // --- MISSING PIECES ---\n  const [productCatalog, setProductCatalog] = useState([]); // NEW: State for all products\n  const [selectedProduct, setSelectedProduct] = useState(null); // NEW: State for the selected product\n\n  // NEW: Fetch all products when the component first loads\n  useEffect(() => {\n    const fetchAllProducts = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5001/api/products');\n        const data = await response.json();\n        setProductCatalog(data); // Store all products in state\n      } catch (error) {\n        console.error(\"Failed to fetch the product catalog:\", error);\n      }\n    };\n    fetchAllProducts();\n  }, []); // The empty array [] means this runs only once\n\n  const handleProductClick = (product) => {\n    if (!history.find(p => p.id === product.id)) {\n      setHistory([...history, product]);\n    }\n    setSelectedProduct(product); // Show details when a product is clicked\n  };\n\n  const handleGetRecommendations = async () => {\n    setIsLoading(true);\n    setRecommendations(null);\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/recommendations', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          preferences: preferences, \n          history: history.map(({ id, name, category }) => ({ id, name, category }))\n        }),\n      });\n      const data = await response.json();\n      setRecommendations(data);\n    } catch (error) {\n      console.error('Failed to fetch recommendations:', error);\n      setRecommendations({ error: 'Failed to connect to the server.' });\n    }\n    setIsLoading(false);\n  };\n  \n  // This function will now work because productCatalog and setSelectedProduct exist\n  const handleRecommendationClick = (productId) => {\n    const product = productCatalog.find(p => p.id === productId);\n    setSelectedProduct(product);\n  };\n  // In App.js, add this new function:\n  const handleDeleteHistoryItem = (productIdToDelete) => {\n  // Create a new array that excludes the item with the matching ID\n    const updatedHistory = history.filter(item => item.id !== productIdToDelete);\n    setHistory(updatedHistory);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>AI Product Recommender</h1>\n      </header>\n      <main>\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <UserPreferences \n              preferences={preferences} \n              setPreferences={setPreferences} \n              onSubmit={handleGetRecommendations}\n            />\n            <BrowsingHistory history={history} />\n            {isLoading && <div className=\"loading\">Getting recommendations...</div>}\n            <Recommendations\n              recommendations={recommendations} \n              onProductSelect={handleRecommendationClick}\n              productCatalog={productCatalog}\n            />\n          </div>\n          <div className=\"right-panel\">\n            {/* NEW: Conditional logic to show either details or catalog */}\n            {selectedProduct ? (\n              <ProductDetail \n                product={selectedProduct} \n                onClose={() => setSelectedProduct(null)} \n              />\n            ) : (\n              <Catalog \n                products={productCatalog} \n                onProductClick={handleProductClick} \n              />\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}